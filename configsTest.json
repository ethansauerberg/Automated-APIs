{
    "replacers":{
        "version": "v1",
        "url": "localhost:2000",
        "docsUrl": "localhost:2000",
        "adminEmail": "ethansauerberg@gmail.com",
        "mongoUser": "autoAPIUsername",
        "mongoPass": "autoAPIPassword",
        "mongoClusterName": "Cluster0",
        "mongoDatabaseName": "myFirstDatabase",
        "otherCollections": "const objectsCollection = 'objects' //your mongodb objects collection name",
        "invalidInputMessage": "Invalid or missing input. Please see the docs at the above link for more information.",
        "invalidEmailOrPasswordMessage": "No email/password match.",
        "requestedResourcesDidNotExistMessage": "The requested resource(s) did not exist.",
        "internalServerErrorMessage": "An internal server error occurred. Please try again.",
        "emailTakenMessage": "There is already an account associated with that email. Please try logging in, or create an account using a different email.",
        "requestedResourceAccessDenied": "Your account does not have access to one or more of the requested resources.",
        "author": "Frank Bobson",
        "otherDbCollectionExports": "objectsCollection: objectsCollection,",
        "fields": "will be replaced later...",
        "fieldsExports": "will be replaced later...",
        "routesImportLines": "will be replaced later...",
        "invalidEmailMessage": "The email passed did not pass our email verifier. Please ensure your email address fits the format ______@____.___ and contains no additional special characters.",
        "invalidPasswordMessage": "Your password did not pass our password verifier. Passwords must be 8-100 non-space characters and have one or more of each: uppercase letters, lowercase letters, digits, symbols.",
        "invalidMongoIdMessage": "The MongoDB ID passed was invalid. Please ensure it fits standard MongoDB ID format."
    },
    "objects": [
        {
            "name": "doubleNestedTestObject",
            "getsRoutes": false,
            "code": "doubleNestedTestObjectFields = [\n\t{'name': 'doubleNestedField1', 'type': 'string', 'required': true}\n]"
        },
        {
            "name": "nestedTestObject",
            "getsRoutes": false,
            "code": "nestedTestObjectFields = [\n\t{'name': 'nestedField1', 'type': 'string', 'required': true},\n\t{'name': 'nestedField2', 'type': 'number', 'required': true},\n\t{'name': 'nestedField3', 'type': 'boolean', 'required': false},\n\t{'name': 'nestedField4', 'type': 'object', 'required': true, 'nestedType': 'object', 'nestedFields': doubleNestedTestObjectFields},\n]"
        },
        {
            "name": "testObject",
            "getsRoutes": true,
            "code": "testObjectFields = [\n\t{'name': 'field1', 'type': 'string', 'required': true},\n\t{'name': 'field2', 'type': 'number', 'required': false},\n\t{'name': 'field3', 'type': 'boolean', 'required': true},\n\t{'name': 'field4', 'type': 'array', 'required': true, 'nestedType': 'number'},\n\t{'name': 'field5', 'type': 'array', 'required': true, 'nestedType': 'object', 'nestedFields': nestedTestObjectFields},\n]"
        },        
        {
            "name": "testObject2",
            "getsRoutes": true,
            "code": "testObject2Fields = [\n\t{'name': 'fieldA', 'type': 'string', 'required': false}\n]"
        }
    ]
}
